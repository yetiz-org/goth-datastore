name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  GO_VERSION: '1.23'

jobs:
  # Job 1: Code Quality and Linting
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Format check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted properly. Please run 'go fmt ./...'"
          gofmt -s -l .
          exit 1
        fi

    - name: Vet
      run: go vet ./...

  # Job 2: Integration Tests with Services
  integration-tests:
    runs-on: ubuntu-latest
    needs: code-quality
    
    strategy:
      matrix:
        test-group: [redis, database, cassandra]
      fail-fast: false

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      cassandra:
        image: cassandra:4.1
        ports:
          - 9042:9042
        env:
          CASSANDRA_USER: cassandra
          CASSANDRA_PASSWORD: cassandra
        options: >-
          --health-cmd "cqlsh -u cassandra -p cassandra -e 'SELECT now() FROM system.local;'"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify service connectivity
      run: |
        echo "üîç Verifying service connectivity..."
        # Wait a bit for services to fully start
        sleep 10
        
        # Test Redis
        nc -z 127.0.0.1 6379 && echo "‚úÖ Redis accessible" || echo "‚ùå Redis not accessible"
        # Test MySQL
        nc -z 127.0.0.1 3306 && echo "‚úÖ MySQL accessible" || echo "‚ùå MySQL not accessible"
        # Test Cassandra
        nc -z 127.0.0.1 9042 && echo "‚úÖ Cassandra accessible" || echo "‚ùå Cassandra not accessible"

    - name: Setup test configuration for ${{ matrix.test-group }}
      run: |
        echo "‚öôÔ∏è Setting up test configuration for ${{ matrix.test-group }}..."
        cp docker/config/${{ matrix.test-group }}-test/secret.json example/${{ matrix.test-group }}-test/
        echo "üìã Configuration content:"
        cat example/${{ matrix.test-group }}-test/secret.json

    - name: Run ${{ matrix.test-group }} tests
      run: |
        echo "üß™ Running ${{ matrix.test-group }} tests..."
        case "${{ matrix.test-group }}" in
          "redis")
            go test -v -run TestRedis ./... -timeout 10m
            ;;
          "database")
            go test -v -run TestDatabase ./... -timeout 10m
            ;;
          "cassandra")
            go test -v -run TestCassandra ./... -timeout 15m
            ;;
        esac

  # Job 3: Full Integration Test (all services together)
  full-integration:
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      cassandra:
        image: cassandra:4.1
        ports:
          - 9042:9042
        env:
          CASSANDRA_USER: cassandra
          CASSANDRA_PASSWORD: cassandra
        options: >-
          --health-cmd "cqlsh -u cassandra -p cassandra -e 'SELECT now() FROM system.local;'"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify all service connectivity
      run: |
        echo "üîç Verifying all service connectivity..."
        sleep 15
        
        # Test all services
        nc -z 127.0.0.1 6379 && echo "‚úÖ Redis accessible" || echo "‚ùå Redis not accessible"
        nc -z 127.0.0.1 3306 && echo "‚úÖ MySQL accessible" || echo "‚ùå MySQL not accessible"
        nc -z 127.0.0.1 9042 && echo "‚úÖ Cassandra accessible" || echo "‚ùå Cassandra not accessible"

    - name: Setup all test configurations
      run: |
        echo "‚öôÔ∏è Setting up all test configurations..."
        cp -r docker/config/* example/
        echo "üìã Redis configuration:"
        cat example/redis-test/secret.json
        echo "üìã MySQL configuration:" 
        cat example/database-test/secret.json
        echo "üìã Cassandra configuration:"
        cat example/cassandra-test/secret.json

    - name: Run full test suite
      run: |
        echo "üß™ Running full test suite..."
        go test -v ./... -timeout 20m

  # Job 4: Build verification
  build:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build
      run: go build -v ./...

    - name: Check for unused dependencies
      run: go mod tidy && git diff --exit-code go.mod go.sum
